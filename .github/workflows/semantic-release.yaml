name: Semantic Release

on:
  push:
    branches:
      - master

jobs:
  # Builds token library from current data/tokens.json file and releases it.
  release:
    name: Build and release library
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - run: yarn install --frozen-lockfile

      - name: Build
        run: yarn run build

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v3.0.1
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git-user-signingkey: true
          git-commit-gpgsign: true

      - name: Release package to public NPM registry
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}

      - name: Upload documentation via ftp
        uses: airvzxf/ftp-deployment-action@latest
        with:
          server: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local_dir: "./dist/docs"
          remote_dir: "./public"
          delete: "true"

      - name: Copy released package to private GitHub NPM registry
        run: npx npm-copy --from https://registry.npmjs.org --from-username any --from-password any --to=https://npm.pkg.github.com --to-email="${GIT_COMMITTER_EMAIL}" --to-token="${NODE_AUTH_TOKEN}" %40sage%2Fdesign-tokens 
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}


  # Pushes current data/tokens.json file contents to "public" JSONBin.
  # This job has no access to dist folder built in `release` job.
  # It runs independently and it checkouts its own contents.
  update-tokens:
    name: Update public JSONBin
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: true

      - id: tokensData
        # This allows to read multi line json file.
        # More on: https://github.community/t/set-output-truncates-multiline-strings/16852
        run: |
          content=`cat ./data/all.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=data::$content"

      - name: Push data to "public" JSONbin
        uses: fabasoad/jsonbin-action@main
        with:
          body: '{"version": "51", "updatedAt": "dddd", "values": ${{ steps.tokensData.outputs.data }} }'
          bin_id: ${{ secrets.JSON_BIN__PUBLIC_BIN_ID }}
          method: 'UPDATE'
          api_key: ${{ secrets.JSON_BIN__API_KEY }}
